'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var fp = require('fastify-plugin');
var fs = require('fs');
var url = require('url');
var injectDependencies = require('../decorators/helpers/inject-dependencies.cjs');
require('../decorators/index.cjs');
var _injectablesHolder = require('../registry/_injectables-holder.cjs');
var destructors = require('../registry/destructors.cjs');
var index = require('../symbols/index.cjs');
var initializer = require('../decorators/initializer.cjs');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

function _interopNamespace(e) {
    if (e && e.__esModule) return e;
    var n = Object.create(null);
    if (e) {
        Object.keys(e).forEach(function (k) {
            if (k !== 'default') {
                var d = Object.getOwnPropertyDescriptor(e, k);
                Object.defineProperty(n, k, d.get ? d : {
                    enumerable: true,
                    get: function () { return e[k]; }
                });
            }
        });
    }
    n["default"] = e;
    return Object.freeze(n);
}

var fp__default = /*#__PURE__*/_interopDefaultLegacy(fp);

/**
 * @license
 * Copyright Andrey Chalkin <L2jLiga@gmail.com> (https://github.com/L2jLiga). All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/L2jLiga/fastify-decorators/blob/master/LICENSE
 */
const defaultMask = /\.(handler|controller)\./;
const bootstrap = fp__default["default"](async (fastify, config) => {
    var _a;
    _injectablesHolder._injectablesHolder.injectSingleton(index.FastifyInstanceToken, fastify, false);
    const controllers = new Set();
    const skipBroken = config.skipBroken;
    if ('directory' in config)
        (await autoLoadModules(config)).forEach(controllers.add, controllers);
    if ('controllers' in config)
        config.controllers.forEach(controllers.add, controllers);
    const classLoader = (_a = config.classLoader) !== null && _a !== void 0 ? _a : injectDependencies.classLoaderFactory(_injectablesHolder._injectablesHolder);
    fastify.decorate(index.CLASS_LOADER, classLoader);
    await loadControllers({ controllers: [...controllers], skipBroken, prefix: config.prefix }, fastify);
    await Promise.all(initializer.readyMap.values());
    if (destructors.destructors.size)
        useGracefulShutdown(fastify);
}, {
    fastify: '^3.0.0 || ^4.0.0 || ^5.0.0',
    name: 'fastifyDecorators',
});
function autoLoadModules(config) {
    const flags = config.mask instanceof RegExp ? config.mask.flags.replace('g', '') : '';
    const filter = config.mask ? new RegExp(config.mask, flags) : defaultMask;
    return Promise.all([...findModules(parseDirectory(config.directory), filter)].map(loadModule));
}
function parseDirectory(directory) {
    const urlLike = directory.toString('utf8');
    const url$1 = urlLike.startsWith('file://') ? new url.URL(urlLike) : new url.URL('file://' + urlLike);
    if (fs.lstatSync(url$1).isFile())
        url$1.pathname += './..';
    return url$1;
}
function* findModules(rootDirUrl, filter) {
    const directoriesToRead = new Set([rootDirUrl]);
    for (const dirPath of directoriesToRead) {
        for (const filePath of fs.readdirSync(dirPath, { withFileTypes: true })) {
            const fullFilePath = new url.URL(`./${filePath.name}`, dirPath.href + '/');
            if (filePath.isDirectory()) {
                fullFilePath.href += '/';
                directoriesToRead.add(fullFilePath);
            }
            else if (filter.test(filePath.name)) {
                yield fullFilePath;
            }
        }
    }
}
/* istanbul ignore next */
async function loadModule(moduleUrl) {
    if (typeof require !== 'undefined') {
        const module = url.fileURLToPath(moduleUrl);
        // eslint-disable-next-line @typescript-eslint/no-var-requires
        return require(module).__esModule ? require(module).default : require(module);
    }
    return (function (t) { return Promise.resolve().then(function () { return /*#__PURE__*/_interopNamespace(require(t)); }); })(moduleUrl.toString()).then((m) => m.default);
}
async function loadControllers(config, fastify) {
    await Promise.all(config.controllers.map((controller) => loadController(controller, fastify, config)));
}
function loadController(controller, fastify, config) {
    if (verifyController(controller)) {
        return controller[index.CREATOR].register(fastify, config.prefix);
    }
    else if (!config.skipBroken) {
        throw new TypeError(`Loaded file is incorrect module and can not be bootstrapped: ${controller}`);
    }
}
function verifyController(controller) {
    return controller && index.CREATOR in controller;
}
function useGracefulShutdown(fastify) {
    fastify.addHook('onClose', () => {
        return Promise.all([...destructors.destructors].map(([Service, property]) => fastify[index.CLASS_LOADER](Service)[property]()));
    });
}

exports.bootstrap = bootstrap;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjpudWxsLCJzb3VyY2VzIjpbbnVsbF0sInNvdXJjZXNDb250ZW50IjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLCtDQUE4QztBQUMvRSxRQUFRLHlCQUF3QjtBQUNoQyxpQ0FBaUMscUNBQW9DO0FBQ3JFLDBCQUEwQiw2QkFBNEI7QUFDdEQsb0JBQW9CLHNCQUFxQjtBQUN6QywwQkFBMEIsK0JBQThCO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7In0=
