'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var controllerType = require('../registry/controller-type.cjs');
var index = require('../symbols/index.cjs');
var injectControllerOptions = require('./helpers/inject-controller-options.cjs');
var patchMethods = require('./helpers/patch-methods.cjs');
var controllerType$1 = require('./strategies/controller-type.cjs');

/**
 * @license
 * Copyright Andrey Chalkin <L2jLiga@gmail.com> (https://github.com/L2jLiga). All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/L2jLiga/fastify-decorators/blob/master/LICENSE
 */
function makeConfig(config) {
    if (typeof config === 'string')
        config = { route: config };
    return { type: controllerType.ControllerType.SINGLETON, route: '/', tags: [], ...config };
}
function Controller(config) {
    return (controller) => {
        const { route, type, tags } = makeConfig(config);
        injectControllerOptions.injectControllerOptions(controller);
        patchMethods.patchMethods(controller);
        controller[index.CREATOR].register = async (instance, prefix = '', classLoader = instance[index.CLASS_LOADER]) => {
            let controllerInstance;
            await instance.register(async (instance) => {
                controllerInstance = controllerType$1.ControllerTypeStrategies[type](instance, controller, classLoader, tags);
            }, { prefix: prefix + route });
            return controllerInstance;
        };
    };
}

exports.Controller = Controller;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjpudWxsLCJzb3VyY2VzIjpbbnVsbF0sInNvdXJjZXNDb250ZW50IjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLGlDQUFnQztBQUM3RCxvQkFBb0Isc0JBQXFCO0FBQ3pDLHNDQUFzQyx5Q0FBd0M7QUFDOUUsMkJBQTJCLDZCQUE0QjtBQUN2RCwrQkFBK0Isa0NBQWlDO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7In0=
