/**
 * @license
 * Copyright Andrey Chalkin <L2jLiga@gmail.com> (https://github.com/L2jLiga). All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/L2jLiga/fastify-decorators/blob/master/LICENSE
 */
import { IErrorHandler, IHandler, IHook } from '../../interfaces/controller.js';
import { ERROR_HANDLERS, HANDLERS, HOOKS, SERVICE_INJECTION } from '../../symbols/index.js';
import { ServiceInjection } from './inject-dependencies.js';
import { Container } from './container.js';
export declare function ensureHandlers(target: {
    [HANDLERS]?: Container<IHandler>;
}): void;
export declare function hasHandlers<Constructor>(target: Constructor): target is Constructor & {
    [HANDLERS]: Container<IHandler>;
};
export declare function ensureErrorHandlers(target: {
    [ERROR_HANDLERS]?: Container<IErrorHandler>;
}): void;
export declare function hasErrorHandlers<T>(target: T): target is T & {
    [ERROR_HANDLERS]: Container<IErrorHandler>;
};
export declare function ensureHooks(target: {
    [HOOKS]?: Container<IHook>;
}): void;
export declare function hasHooks<T>(target: T): target is T & {
    [HOOKS]: Container<IHook>;
};
export declare function ensureServiceInjection(target: {
    [SERVICE_INJECTION]?: Container<ServiceInjection>;
}): void;
export declare function hasServiceInjection<T>(val: T): val is T & {
    [SERVICE_INJECTION]: Container<ServiceInjection>;
};
