'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = require('../../symbols/index.cjs');
var classProperties = require('./class-properties.cjs');
var createErrorsHandler = require('./create-errors-handler.cjs');

/**
 * @license
 * Copyright Andrey Chalkin <L2jLiga@gmail.com> (https://github.com/L2jLiga). All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/L2jLiga/fastify-decorators/blob/master/LICENSE
 */
function parseConfig(config = '/', options = {}) {
    if (typeof config === 'string')
        return { url: config, options };
    const parsed = { options, ...config };
    return {
        ...parsed,
        options: { ...parsed.options },
    };
}
const requestHandlersCache = new WeakMap();
function getTarget(Target, request, ...rest) {
    if (requestHandlersCache.has(request))
        return requestHandlersCache.get(request);
    const target = new Target(request, ...rest);
    requestHandlersCache.set(request, target);
    return target;
}
function requestDecoratorsFactory(method) {
    return function (routeOrConfig, options) {
        const config = parseConfig(routeOrConfig, options);
        return function (target, propKey) {
            if (propKey) {
                controllerMethodDecoratorsFactory(method, config, target, propKey);
                return;
            }
            target[index.CREATOR] = {
                register: (instance) => {
                    if (classProperties.hasHooks(target)) {
                        for (const hook of target[index.HOOKS]) {
                            const hookFn = (request, ...rest) => {
                                return getTarget(target, request, ...rest)[hook.handlerName](request, ...rest);
                            };
                            const option = config.options[hook.name];
                            if (option == null)
                                config.options[hook.name] = hookFn;
                            else if (Array.isArray(option))
                                option.push(hookFn);
                            else
                                config.options[hook.name] = [option, hookFn];
                        }
                    }
                    if (classProperties.hasErrorHandlers(target)) {
                        config.options.errorHandler = (error, request, ...rest) => {
                            const errorsHandler = createErrorsHandler.createErrorsHandler(target[index.ERROR_HANDLERS], getTarget(target, request, ...rest));
                            return errorsHandler(error, request, ...rest);
                        };
                    }
                    instance[method](config.url, config.options, function (request, ...rest) {
                        return getTarget(target, request, ...rest).handle();
                    });
                },
            };
        };
    };
}
function controllerMethodDecoratorsFactory(method, config, { constructor }, propKey) {
    classProperties.ensureHandlers(constructor);
    constructor[index.HANDLERS].push({
        url: config.url,
        method,
        options: config.options,
        handlerMethod: propKey,
    });
}

exports.controllerMethodDecoratorsFactory = controllerMethodDecoratorsFactory;
exports.requestDecoratorsFactory = requestDecoratorsFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjpudWxsLCJzb3VyY2VzIjpbbnVsbF0sInNvdXJjZXNDb250ZW50IjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHlCQUF3QjtBQUM1Qyw4QkFBOEIsd0JBQXVCO0FBQ3JELGtDQUFrQyw2QkFBNEI7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyJ9
