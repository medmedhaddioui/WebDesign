/**
 * @license
 * Copyright Andrey Chalkin <L2jLiga@gmail.com> (https://github.com/L2jLiga). All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/L2jLiga/fastify-decorators/blob/master/LICENSE
 */
import { RouteShorthandOptions } from 'fastify';
import { RouteConfig } from '../interfaces/index.js';
export declare function ALL(): (target: unknown, propKey?: string | symbol) => void;
export declare function ALL(url: string): (target: unknown, propKey?: string | symbol) => void;
export declare function ALL(url: string, options: RouteShorthandOptions): (target: unknown, propKey?: string | symbol) => void;
export declare function ALL(config: RouteConfig): (target: unknown, propKey?: string | symbol) => void;
export declare function GET(): (target: unknown, propKey?: string | symbol) => void;
export declare function GET(url: string): (target: unknown, propKey?: string | symbol) => void;
export declare function GET(url: string, options: RouteShorthandOptions): (target: unknown, propKey?: string | symbol) => void;
export declare function GET(config: RouteConfig): (target: unknown, propKey?: string | symbol) => void;
export declare function POST(): (target: unknown, propKey?: string | symbol) => void;
export declare function POST(url: string): (target: unknown, propKey?: string | symbol) => void;
export declare function POST(url: string, options: RouteShorthandOptions): (target: unknown, propKey?: string | symbol) => void;
export declare function POST(config: RouteConfig): (target: unknown, propKey?: string | symbol) => void;
export declare function PUT(): (target: unknown, propKey?: string | symbol) => void;
export declare function PUT(url: string): (target: unknown, propKey?: string | symbol) => void;
export declare function PUT(url: string, options: RouteShorthandOptions): (target: unknown, propKey?: string | symbol) => void;
export declare function PUT(config: RouteConfig): (target: unknown, propKey?: string | symbol) => void;
export declare function PATCH(): (target: unknown, propKey?: string | symbol) => void;
export declare function PATCH(url: string): (target: unknown, propKey?: string | symbol) => void;
export declare function PATCH(url: string, options: RouteShorthandOptions): (target: unknown, propKey?: string | symbol) => void;
export declare function PATCH(config: RouteConfig): (target: unknown, propKey?: string | symbol) => void;
export declare function DELETE(): (target: unknown, propKey?: string | symbol) => void;
export declare function DELETE(url: string): (target: unknown, propKey?: string | symbol) => void;
export declare function DELETE(url: string, options: RouteShorthandOptions): (target: unknown, propKey?: string | symbol) => void;
export declare function DELETE(config: RouteConfig): (target: unknown, propKey?: string | symbol) => void;
export declare function OPTIONS(): (target: unknown, propKey?: string | symbol) => void;
export declare function OPTIONS(url: string): (target: unknown, propKey?: string | symbol) => void;
export declare function OPTIONS(url: string, options: RouteShorthandOptions): (target: unknown, propKey?: string | symbol) => void;
export declare function OPTIONS(config: RouteConfig): (target: unknown, propKey?: string | symbol) => void;
export declare function HEAD(): (target: unknown, propKey?: string | symbol) => void;
export declare function HEAD(url: string): (target: unknown, propKey?: string | symbol) => void;
export declare function HEAD(url: string, options: RouteShorthandOptions): (target: unknown, propKey?: string | symbol) => void;
export declare function HEAD(config: RouteConfig): (target: unknown, propKey?: string | symbol) => void;
