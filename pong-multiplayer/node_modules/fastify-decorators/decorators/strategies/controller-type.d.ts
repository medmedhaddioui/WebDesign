/**
 * @license
 * Copyright Andrey Chalkin <L2jLiga@gmail.com> (https://github.com/L2jLiga). All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/L2jLiga/fastify-decorators/blob/master/LICENSE
 */
import { FastifyInstance } from 'fastify';
import { ClassLoader } from '../../interfaces/bootstrap-config.js';
import { InjectableController } from '../../interfaces/index.js';
import { ControllerType } from '../../registry/controller-type.js';
import { TagObject } from '../helpers/swagger-helper.js';
declare type ControllerFactory = (instance: FastifyInstance, constructor: InjectableController, classLoader: ClassLoader, tags: TagObject[]) => unknown;
/**
 * Various strategies which can be applied to controller
 *
 * @usageNotes
 *
 * There are few available strategies:
 *   SINGLETON strategy creates one instance of controller which will handle all requests
 *   REQUEST strategy will create new instance for each request/hook
 *
 * By default controllers use SINGLETON strategy
 */
export declare const ControllerTypeStrategies: Record<ControllerType, ControllerFactory>;
export {};
