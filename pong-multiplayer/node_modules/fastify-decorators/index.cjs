'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var bootstrap = require('./bootstrap/bootstrap.cjs');
var requestHandler = require('./interfaces/request-handler.cjs');
var controller = require('./decorators/controller.cjs');
var controllerType = require('./registry/controller-type.cjs');
var service = require('./decorators/service.cjs');
var inject = require('./decorators/inject.cjs');
var initializer = require('./decorators/initializer.cjs');
var destructor = require('./decorators/destructor.cjs');
var hook = require('./decorators/hook.cjs');
var errorHandler = require('./decorators/error-handler.cjs');
var injectablesHolder = require('./registry/injectables-holder.cjs');
var getInstanceByToken = require('./utils/get-instance-by-token.cjs');
var index = require('./symbols/index.cjs');
var requestHandlers = require('./decorators/request-handlers.cjs');

/**
 * @license
 * Copyright Andrey Chalkin <L2jLiga@gmail.com> (https://github.com/L2jLiga). All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/L2jLiga/fastify-decorators/blob/master/LICENSE
 */

exports.bootstrap = bootstrap.bootstrap;
exports.RequestHandler = requestHandler.RequestHandler;
exports.Controller = controller.Controller;
Object.defineProperty(exports, 'ControllerType', {
	enumerable: true,
	get: function () { return controllerType.ControllerType; }
});
exports.Service = service.Service;
exports.Inject = inject.Inject;
exports.Initializer = initializer.Initializer;
exports.Destructor = destructor.Destructor;
exports.Hook = hook.Hook;
exports.ErrorHandler = errorHandler.ErrorHandler;
exports.injectablesHolder = injectablesHolder.injectablesHolder;
exports.getInstanceByToken = getInstanceByToken.getInstanceByToken;
exports.FastifyInstanceToken = index.FastifyInstanceToken;
exports.FastifyReplyToken = index.FastifyReplyToken;
exports.FastifyRequestToken = index.FastifyRequestToken;
exports.ALL = requestHandlers.ALL;
exports.DELETE = requestHandlers.DELETE;
exports.GET = requestHandlers.GET;
exports.HEAD = requestHandlers.HEAD;
exports.OPTIONS = requestHandlers.OPTIONS;
exports.PATCH = requestHandlers.PATCH;
exports.POST = requestHandlers.POST;
exports.PUT = requestHandlers.PUT;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjpudWxsLCJzb3VyY2VzIjpbbnVsbF0sInNvdXJjZXNDb250ZW50IjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDJCQUEwQjtBQUNsRCw2QkFBNkIsa0NBQWlDO0FBQzlELHlCQUF5Qiw2QkFBNEI7QUFDckQsNkJBQTZCLGdDQUErQjtBQUM1RCxzQkFBc0IsMEJBQXlCO0FBQy9DLHFCQUFxQix5QkFBd0I7QUFDN0MsMEJBQTBCLDhCQUE2QjtBQUN2RCx5QkFBeUIsNkJBQTRCO0FBQ3JELG1CQUFtQix1QkFBc0I7QUFDekMsMkJBQTJCLGdDQUErQjtBQUMxRCxnQ0FBZ0MsbUNBQWtDO0FBQ2xFLGlDQUFpQyxtQ0FBa0M7QUFDbkUsb0JBQW9CLHFCQUFvQjtBQUN4Qyw4QkFBOEIsbUNBQWtDO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7In0=
