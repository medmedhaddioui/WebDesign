/**
 * @license
 * Copyright Andrey Chalkin <L2jLiga@gmail.com> (https://github.com/L2jLiga). All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/L2jLiga/fastify-decorators/blob/master/LICENSE
 */
export const CREATOR = Symbol.for('fastify-decorators.creator');
export const INITIALIZER = Symbol.for('fastify-decorators.initializer');
export const DESTRUCTOR = Symbol.for('fastify-decorators.destructor');
export const ERROR_HANDLERS = Symbol.for('fastify-decorators.error-handlers');
export const HANDLERS = Symbol.for('fastify-decorators.handlers');
export const HOOKS = Symbol.for('fastify-decorators.hooks');
export const SERVICE_INJECTION = Symbol.for('fastify-decorators.service-injection');
export const CLASS_LOADER = Symbol.for('fastify-decorators.class-loader');
export const FASTIFY_REQUEST = Symbol.for('fastify-decorators.fastify-request');
export const FASTIFY_REPLY = Symbol.for('fastify-decorators.fastify-reply');
export const FastifyInstanceToken = Symbol.for('fastify-decorators.fastify-instance');
export const FastifyRequestToken = Symbol.for('fastify-decorators.token.fastify-request');
export const FastifyReplyToken = Symbol.for('fastify-decorators.token.fastify-instance');
export const INITIALIZED = Symbol.for('fastify-decorators.initializer-called');
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9saWIvc3ltYm9scy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUc7QUFFSCxNQUFNLENBQUMsTUFBTSxPQUFPLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDO0FBQ2hFLE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLGdDQUFnQyxDQUFDLENBQUM7QUFDeEUsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsK0JBQStCLENBQUMsQ0FBQztBQUN0RSxNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxtQ0FBbUMsQ0FBQyxDQUFDO0FBQzlFLE1BQU0sQ0FBQyxNQUFNLFFBQVEsR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLDZCQUE2QixDQUFDLENBQUM7QUFDbEUsTUFBTSxDQUFDLE1BQU0sS0FBSyxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsMEJBQTBCLENBQUMsQ0FBQztBQUM1RCxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLHNDQUFzQyxDQUFDLENBQUM7QUFFcEYsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsaUNBQWlDLENBQUMsQ0FBQztBQUUxRSxNQUFNLENBQUMsTUFBTSxlQUFlLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxvQ0FBb0MsQ0FBQyxDQUFDO0FBQ2hGLE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLGtDQUFrQyxDQUFDLENBQUM7QUFFNUUsTUFBTSxDQUFDLE1BQU0sb0JBQW9CLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxxQ0FBcUMsQ0FBQyxDQUFDO0FBQ3RGLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsMENBQTBDLENBQUMsQ0FBQztBQUMxRixNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLDJDQUEyQyxDQUFDLENBQUM7QUFDekYsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsdUNBQXVDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBBbmRyZXkgQ2hhbGtpbiA8TDJqTGlnYUBnbWFpbC5jb20+IChodHRwczovL2dpdGh1Yi5jb20vTDJqTGlnYSkuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL0wyakxpZ2EvZmFzdGlmeS1kZWNvcmF0b3JzL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuXG5leHBvcnQgY29uc3QgQ1JFQVRPUiA9IFN5bWJvbC5mb3IoJ2Zhc3RpZnktZGVjb3JhdG9ycy5jcmVhdG9yJyk7XG5leHBvcnQgY29uc3QgSU5JVElBTElaRVIgPSBTeW1ib2wuZm9yKCdmYXN0aWZ5LWRlY29yYXRvcnMuaW5pdGlhbGl6ZXInKTtcbmV4cG9ydCBjb25zdCBERVNUUlVDVE9SID0gU3ltYm9sLmZvcignZmFzdGlmeS1kZWNvcmF0b3JzLmRlc3RydWN0b3InKTtcbmV4cG9ydCBjb25zdCBFUlJPUl9IQU5ETEVSUyA9IFN5bWJvbC5mb3IoJ2Zhc3RpZnktZGVjb3JhdG9ycy5lcnJvci1oYW5kbGVycycpO1xuZXhwb3J0IGNvbnN0IEhBTkRMRVJTID0gU3ltYm9sLmZvcignZmFzdGlmeS1kZWNvcmF0b3JzLmhhbmRsZXJzJyk7XG5leHBvcnQgY29uc3QgSE9PS1MgPSBTeW1ib2wuZm9yKCdmYXN0aWZ5LWRlY29yYXRvcnMuaG9va3MnKTtcbmV4cG9ydCBjb25zdCBTRVJWSUNFX0lOSkVDVElPTiA9IFN5bWJvbC5mb3IoJ2Zhc3RpZnktZGVjb3JhdG9ycy5zZXJ2aWNlLWluamVjdGlvbicpO1xuXG5leHBvcnQgY29uc3QgQ0xBU1NfTE9BREVSID0gU3ltYm9sLmZvcignZmFzdGlmeS1kZWNvcmF0b3JzLmNsYXNzLWxvYWRlcicpO1xuXG5leHBvcnQgY29uc3QgRkFTVElGWV9SRVFVRVNUID0gU3ltYm9sLmZvcignZmFzdGlmeS1kZWNvcmF0b3JzLmZhc3RpZnktcmVxdWVzdCcpO1xuZXhwb3J0IGNvbnN0IEZBU1RJRllfUkVQTFkgPSBTeW1ib2wuZm9yKCdmYXN0aWZ5LWRlY29yYXRvcnMuZmFzdGlmeS1yZXBseScpO1xuXG5leHBvcnQgY29uc3QgRmFzdGlmeUluc3RhbmNlVG9rZW4gPSBTeW1ib2wuZm9yKCdmYXN0aWZ5LWRlY29yYXRvcnMuZmFzdGlmeS1pbnN0YW5jZScpO1xuZXhwb3J0IGNvbnN0IEZhc3RpZnlSZXF1ZXN0VG9rZW4gPSBTeW1ib2wuZm9yKCdmYXN0aWZ5LWRlY29yYXRvcnMudG9rZW4uZmFzdGlmeS1yZXF1ZXN0Jyk7XG5leHBvcnQgY29uc3QgRmFzdGlmeVJlcGx5VG9rZW4gPSBTeW1ib2wuZm9yKCdmYXN0aWZ5LWRlY29yYXRvcnMudG9rZW4uZmFzdGlmeS1pbnN0YW5jZScpO1xuZXhwb3J0IGNvbnN0IElOSVRJQUxJWkVEID0gU3ltYm9sLmZvcignZmFzdGlmeS1kZWNvcmF0b3JzLmluaXRpYWxpemVyLWNhbGxlZCcpO1xuIl19